Celebrity Problem

Naive n2 approach

Stack based approach we will be using stack to find out the potential candidate


class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& arr, int n) {
         stack<int> st;
         for(int i = 0; i < n ; i++){
             st.push(i);
         }
         while(st.size()>=1){
             int i = st.top(); st.pop();
             int j = st.top();st.pop();
             if(arr[i][j] == 1){
                 st.push(j);
             }
             else st.push(i);
         }
         int pot = st.top() ; st.pop();
         for(int i = 0 ; i < arr[0].size();i++){
             if(i != pot){
                 if(arr[i][pot] == 0 or arr[pot][i] == 1)return -1;
             }
         }
         return pot;
    }
};



two pointer to find out the potential candidate
class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& arr, int n) {
        int i = 0;
        int j = n - 1;
         while(i < j) {
            if(arr[i][j] == 1) i++;
            else j--;
         }
         int pot = i;
         for(int i = 0 ; i < arr[0].size();i++){
             if(i != pot){
                 if(arr[i][pot] == 0 or arr[pot][i] == 1)return -1;
             }
         }
         return pot;
    }
}; 